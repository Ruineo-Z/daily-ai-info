# 超轻量级Nginx配置 - 专为2核2G服务器优化
user www-data;
worker_processes 2;  # 2核CPU
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    ##
    # 基本设置 - 内存优化
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;  # 减少连接时间
    types_hash_max_size 2048;
    server_tokens off;  # 隐藏版本信息

    # 限制请求大小
    client_max_body_size 1m;
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL设置（如果需要HTTPS）
    ##
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    ##
    # 日志设置 - 减少磁盘I/O
    ##
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main buffer=16k flush=5m;
    error_log /var/log/nginx/error.log warn;

    ##
    # Gzip压缩 - 节省带宽
    ##
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;  # 平衡CPU和压缩比
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    ##
    # 每日AI技术趋势分析网站配置
    ##
    server {
        listen 80;
        server_name your-domain.com www.your-domain.com;  # 替换为你的域名
        root /var/www/ai-reports;
        index index.html;

        # 安全头设置
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # 主页
        location = / {
            try_files /index.html =404;
            expires 1h;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        # HTML页面 - 短期缓存
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            try_files $uri $uri/ =404;
        }

        # API数据 - 更短缓存
        location /api/ {
            expires 30m;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            add_header Access-Control-Allow-Origin "*";
            try_files $uri $uri/ =404;
        }

        # 静态资源 - 长期缓存
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # robots.txt和sitemap.xml
        location ~* \.(txt|xml)$ {
            expires 1d;
            add_header Cache-Control "public";
            try_files $uri =404;
        }

        # 报告目录
        location /reports/ {
            expires 1d;  # 报告页面缓存时间稍长
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            try_files $uri $uri/ =404;
        }

        # 安全设置 - 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 禁止访问备份文件
        location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 404错误页面
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # 50x错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }

    ##
    # 如果需要HTTPS，取消注释以下配置
    ##
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com www.your-domain.com;
    #     root /var/www/ai-reports;
    #     index index.html;
    #
    #     ssl_certificate /path/to/your/cert.pem;
    #     ssl_certificate_key /path/to/your/private.key;
    #
    #     # 其他配置与HTTP版本相同
    #     include /etc/nginx/sites-available/ai-reports-common.conf;
    # }
    #
    # # HTTP重定向到HTTPS
    # server {
    #     listen 80;
    #     server_name your-domain.com www.your-domain.com;
    #     return 301 https://$server_name$request_uri;
    # }
}